name: build
on:
  workflow_dispatch:
  push:
    branches:
    - main
jobs:
  fmt:
    permissions: read-all
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          ~/.rustup
          /usr/local/cargo
          target/
        key: ${{ runner.os }}-fmt-${{ hashFiles('**/Cargo.lock') }}
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        components: rustfmt
        cache: false
    - name: Rustfmt Check
      uses: actions-rust-lang/rustfmt@v1
  clippy:
    permissions: read-all
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'true'
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          ~/.rustup
          /usr/local/cargo
          target/
        key: ${{ runner.os }}-clippy-${{ hashFiles('**/Cargo.lock') }}
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        components: clippy
        cache: false
    - name: Run clippy
      run: cargo clippy --all -- -D warnings
  test:
    permissions: read-all
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          ~/.rustup
          /usr/local/cargo
          target/
        key: ${{ runner.os }}-test-${{ hashFiles('**/Cargo.lock') }}
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        cache: false
    - name: Cargo Test
      run: cargo test -q
  build:
    permissions: read-all
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          ~/.rustup
          /usr/local/cargo
          target/
        key: ${{ runner.os }}-build-${{ hashFiles('**/Cargo.lock') }}
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        cache: false
    - run: cargo build --release
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: build container
      run: |
        docker build -t framelabs-s3-server .